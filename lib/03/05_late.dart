class Person {
  String name;
  // Ключевое слово late указывает что переменная будет инициализировано потом, то есть это отложенная инициализация. И значение для этого поля можно будет установить в любой части программы, не только в конструкторе
  late int age;
  late int someNumber = getSomeValue();

  Person(this.name);

  void setAge(int age) {
    if (age > 0 && age < 111) {
      this.age = age;
    } else {
      this.age = 18;
    }
  }

  void display() {
    print("Name: $name\nAge: $age");
  }
}

int getSomeValue() => 100;

void main() {
  Person p1 = Person("SOME_NAME");
  // Если не сделать присваивание, то выдаст ошибку
  p1.setAge(100);

  p1.display();
}

// Через late можно оптимизировать производительность. К примеру переменная someNumber инициализируется с помощью внешней функции, которая будет возвращать некоторое значение. При выполнении программы, переменная не будет инициализирована. Так как обращения к этой переменной нет, то она пока и не нужна. И благодаря оператору late переменная не будет инициализирована. Такая переменная будет инициализирована только тогда, когда к ней обратятся в первый раз. Таким образом это может быть полезно, если процесс инициализации занимает много ресурсов, а сама переменная может не потребоваться в процессе работы программы